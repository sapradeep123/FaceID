version: '3.8'

services:
  db:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: .
    ports:
      - "${HOST_API_PORT}:${API_PORT}"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE_MINUTES=${JWT_EXPIRE_MINUTES}
      - ENV=${ENV}
      - WEB_CONCURRENCY=${WEB_CONCURRENCY}
      - INTERNAL_API_KEY=${INTERNAL_API_KEY}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - FACE_ENGINE_URL=${FACE_ENGINE_URL}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
      - "3443:443"  # HTTPS port
    environment:
      - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL}
    volumes:
      - ./ssl:/etc/nginx/ssl:ro  # Mount SSL certificates
      - ./nginx-https.conf:/etc/nginx/conf.d/default.conf:ro  # Use HTTPS config
    depends_on:
      - api

volumes:
  pgdata:
