version: "3.8"

services:
  db:
    image: ankane/pgvector:latest
    container_name: faceid_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-faceid}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./migrations.sql:/docker-entrypoint-initdb.d/000_migrations.sql:ro
    command: [ "postgres", "-c", "shared_buffers=256MB", "-c", "max_connections=200" ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-faceid}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: .
    container_name: faceid_api
    env_file: .env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-faceid}
      - API_HOST=${API_HOST:-0.0.0.0}
      - API_PORT=${API_PORT:-8000}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - INTERNAL_API_KEY=${INTERNAL_API_KEY:-your-internal-api-key-change-this}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://127.0.0.1:3000}
      - FACE_ENGINE_URL=${FACE_ENGINE_URL:-http://127.0.0.1:9000}
      - WEB_CONCURRENCY=${WEB_CONCURRENCY:-4}
    ports:
      - "${HOST_API_PORT:-8000}:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app
    command: >
      bash -lc "gunicorn app.main:app -k uvicorn.workers.UvicornWorker -w ${WEB_CONCURRENCY:-4} -b ${API_HOST:-0.0.0.0}:${API_PORT:-8000} --timeout 60"

  frontend:
    build: 
      context: ./frontend
      args:
        - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL:-http://localhost:${API_PORT:-8000}}
    container_name: faceid_frontend
    ports:
      - "${FRONTEND_HOST_PORT:-3000}:80"
    depends_on:
      - api

volumes:
  pgdata:
